name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Test Suite"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event.workflow_run.conclusion == 'success')
    
    environment:
      name: production
      url: https://your-domain.com
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run pre-deployment tests
      run: npm run test:ci
      env:
        NODE_ENV: test
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
        
    - name: Run content quality check
      run: npm run content:quality
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CONTENT_SYSTEM_ENABLED: 'true'
        CONTENT_QUALITY_THRESHOLD: '80'
      continue-on-error: true
      
    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .next/
          public/
          package.json
          package-lock.json
        retention-days: 30
        
    # Replace with your deployment target (Vercel, Netlify, etc.)
    - name: Deploy to Vercel
      if: success()
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
        # Example for Vercel:
        # npx vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        
    - name: Run post-deployment health check
      if: success()
      run: |
        echo "Running post-deployment health checks..."
        # Add health check commands here
        # curl -f https://your-domain.com/api/health || exit 1
      continue-on-error: true
      
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment successful"
        else
          echo "❌ Deployment failed"
        fi
        
  content-sync:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Sync content improvements
      run: |
        echo "Syncing content improvements..."
        # Optionally run content analysis after deployment
        # npm run content:analyze
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CONTENT_SYSTEM_ENABLED: 'true'
      continue-on-error: true